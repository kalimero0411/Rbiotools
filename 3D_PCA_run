#!/usr/bin/env bash
#set -x

# /usr/bin/env Rscript --no-save

rscript=$(dirname $(readlink -f $0))"/PCA_3D.R"
function print_usage(){
 printf "
3D_PCA_run [OPTIONS] Directory
	-d | --dir	DESeq2 output directory
	-f | --factors	Factors for 3D PCA (e.g. factor1,factor2,factor3; Default = All factors)
	-l | --list	List all available factors for a specific analysis
	-p | --pca	Types of PCA to return (1 = Single factor, 2 = Multi-factor, 3 = DEGs; e.g. 13; Default = 123)
	-r | --rscript	Path to PCA_3D.R (Defaults bash script directory)
	-h | --help	Display help
	
"
}

for arg in "$@"
do
 case $arg in
  -d | --dir)
  shift
  wd=$1
  shift
  ;;
  -f | --factors)
  shift
  factors=$1
  shift
  ;;
  -l | --list)
  list=1
  shift
  ;;
  -p | --pca)
  shift
  pca_type=$1
  shift
  ;;
  -r | --rscript)
  shift
  rscript=$1
  shift
  ;;
  -h | --help)
  print_usage
  exit 1
  ;;
  *)
 esac
done
# xvfb-run 3D_PCA_run --factor factor --wd working_dir (includes PCA_data.RData)

if ! command -v xvfb-run &> /dev/null
then
 echo "xvfb not installed!"
 echo "Install using:"
 echo "sudo apt install xvfb"
 exit 1
fi

if ! command -v ffmpeg $> /dev/null
then
 echo "ffmpeg not installed!"
 echo "Install using:"
 echo "sudo apt install ffmpeg"
 exit 1
fi

if [ -z ${pca_type+x} ]
then
 pca_type=123
fi

echo '#!/usr/bin/env Rscript
packages = c("RColorBrewer","rgl","R.utils")
invisible(
  suppressMessages(
    sapply(packages,FUN = function(x) {
       if(!x %in% rownames(installed.packages())){
         cat("Installing package: ",x,"\n",sep = "")
         BiocManager::install(x,update = FALSE,ask = FALSE)
       }
      cat("#####   Loading package: ",x,"   #####\n",sep = "")
      library(x,character.only = TRUE)
    })))

options(stringsAsFactors = FALSE)
args = R.utils::commandArgs(trailingOnly = TRUE,asValues = TRUE)
setwd(args[["wd"]])
cat("Working directory: ",getwd(),"\n")
load("PCA_data.RData")
if("list" %in% names(args)){
  cat("Available factors: ")
  cat(paste(colnames(experimental_design), collapse = ","),"\n")
}else{
if(! "factors" %in% names(args)){
  factors = colnames(experimental_design)
}else{
  factors = unlist(strsplit(args[["factors"]],split = ","))
}
  cat("Creating 3D PCA for factors ",paste(factors, collapse = " | "),"\n",sep = "")
  PCA_3D(PC_factor = factors, pca_type = as.numeric(args[["pca_type"]]))
}' > $rscript
chmod +x $rscript

if [ ! -z ${list+x} ]
then
 Rscript $rscript --wd $wd --list
 rm --force $rscript
 exit 0
fi

if [ ${#factors[@]} -ne 0 ]
then
 xvfb-run $rscript --factors $factors --pca_type $pca_type --wd $wd
else
 xvfb-run $rscript --pca_type $pca_type --wd $wd
fi

rm --force $rscript
